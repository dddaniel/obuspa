#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

PROG=/usr/sbin/obuspa
db_file=/etc/obuspa.db

CTRL_PATH="Device.LocalAgent.Controller.1."
MTP_PATH="Device.LocalAgent.MTP.1."

# todo: add config for protocols other than STOMP
CONN_PATH="Device.STOMP.Connection.1."

db_set()
{
	${PROG} -f $db_file -c dbset ${1} ${2}
}

validate_controller_section()
{
	uci_validate_section obuspa controller "${1}" \
		'endpointid:string:"self:usp-controller.com"'
}

validate_mtp_section()
{
	uci_validate_section obuspa mtp "${1}" \
		'enable:bool:true' \
		'protocol:string:"STOMP"' \
		'destination:string:'
}

validate_connection_section()
{
	uci_validate_section obuspa connection "${1}" \
		'host:string:"usp-controller.com"' \
		'username:string:username' \
		'password:string:password' \
		'encryption:bool:true' \
		'interface:string:wan'
}

configure_controller() {
	local endpointid

	validate_controller_section "${1}" || {
		log "Validation of section failed"
		return 1;
	}
	db_set "${CTRL_PATH}EndpointID" ${endpointid}
	db_set "${CTRL_PATH}Enable" "1"
	db_set "${CTRL_PATH}AssignedRole" "Device.LocalAgent.ControllerTrust.Role.1"
}

configure_mtp() {
	local protocol enable destination

	validate_mtp_section "${1}" || {
		log "Validation of section failed"
		return 1;
	}
	db_set "${MTP_PATH}Enable" ${enable}
	db_set "${MTP_PATH}Protocol" ${protocol}
	db_set "${MTP_PATH}${protocol}.Reference" "Device.${protocol}.Connection.1"
	db_set "${MTP_PATH}${protocol}.Destination" ${destination}

	db_set "${CTRL_PATH}MTP.1.Enable" "1"
	db_set "${CTRL_PATH}MTP.1.Protocol" ${protocol}
	db_set "${CTRL_PATH}MTP.1.${protocol}.Destination" ${destination}
	db_set "${CTRL_PATH}MTP.1.${protocol}.Reference" "Device.${protocol}.Connection.1"
}

configure_connection() {
	local host username password encryption interface dev

	validate_connection_section "${1}" || {
		log "Validation of section failed"
		return 1;
	}

	json_load "$(ubus call network.interface.${interface} status)"
	json_get_var USP_IFNAME l3_device

	db_set "${CONN_PATH}Host" ${host}
	db_set "${CONN_PATH}Username" ${username}
	db_set "${CONN_PATH}Password" ${password}
	db_set "${CONN_PATH}X_ARRIS-COM_EnableEncryption" ${encryption}
	db_set "${CONN_PATH}EnableHeartbeats" "1"
	db_set "${CONN_PATH}OutgoingHeartbeat" "30000"
	db_set "${CONN_PATH}IncomingHeartbeat" "300000"
}

db_init() {
	config_load obuspa
	config_foreach configure_connection connection
	config_foreach configure_controller controller
	config_foreach configure_mtp mtp
}
start_service() {

	db_init

	[ -z "$USP_IFNAME" ] && return

	procd_open_instance
	procd_set_param env USP_BOARD_IFNAME=${l3device}
	procd_set_param command ${PROG}
	procd_append_param command -p -v 4 -i $USP_IFNAME
	procd_append_param command -f $db_file
	procd_set_param respawn
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

reload_service() {
	stop
	start
}

service_triggers() {
	procd_add_config_trigger "config.change" "obuspa"  /etc/init.d/obuspa restart
	procd_add_interface_trigger "interface.*" "wan"  /etc/init.d/obuspa restart
}
